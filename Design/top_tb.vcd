$date
	Wed Jun 18 17:55:22 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top_tb $end
$var wire 32 ! pc_out [31:0] $end
$var parameter 32 " DEPTH $end
$var parameter 32 # WIDTH $end
$var reg 1 $ clk $end
$var reg 1 % rst $end
$scope module dut $end
$var wire 1 $ clk $end
$var wire 32 & pc_out [31:0] $end
$var wire 1 % rst $end
$var wire 1 ' two_byte $end
$var wire 1 ( zero $end
$var wire 1 ) write_register_signal $end
$var wire 1 * write_mem $end
$var wire 32 + write_data [31:0] $end
$var wire 1 , two_bytes $end
$var wire 32 - rs3_data [31:0] $end
$var wire 32 . rs2_data_to_alu [31:0] $end
$var wire 32 / rs2_data [31:0] $end
$var wire 32 0 rs1_data [31:0] $end
$var wire 1 1 read_mem $end
$var wire 32 2 pc_plus_imm [31:0] $end
$var wire 32 3 pc_plus_4 [31:0] $end
$var wire 32 4 pc_actual [31:0] $end
$var wire 1 5 one_byte $end
$var wire 32 6 next_pc [31:0] $end
$var wire 1 7 mux_writedata_register $end
$var wire 1 8 mux_pc_signal $end
$var wire 1 9 mux_jalr_signal $end
$var wire 1 : mux_imm_signal $end
$var wire 32 ; instr [31:0] $end
$var wire 32 < inst_out [31:0] $end
$var wire 32 = imm_data [31:0] $end
$var wire 1 > four_bytes $end
$var wire 32 ? data_mem_out [31:0] $end
$var wire 1 @ branch_taken $end
$var wire 32 A alu_result [31:0] $end
$var parameter 32 B DEPTH $end
$var parameter 32 C WIDTH $end
$scope module adder_unit_1 $end
$var wire 32 D B [31:0] $end
$var wire 32 E result [31:0] $end
$var wire 32 F A [31:0] $end
$var parameter 32 G WIDTH $end
$upscope $end
$scope module adder_unit_2 $end
$var wire 32 H result [31:0] $end
$var wire 32 I B [31:0] $end
$var wire 32 J A [31:0] $end
$var parameter 32 K WIDTH $end
$upscope $end
$scope module alu_unit $end
$var wire 3 L func3 [2:0] $end
$var wire 7 M func7 [6:0] $end
$var wire 7 N opcode [6:0] $end
$var wire 1 ( zero $end
$var wire 32 O rs2 [31:0] $end
$var wire 32 P rs1 [31:0] $end
$var wire 32 Q pc [31:0] $end
$var parameter 7 R ALI_OP $end
$var parameter 7 S AL_OP $end
$var parameter 7 T BR_OP $end
$var parameter 7 U JAL $end
$var parameter 7 V JALR $end
$var parameter 7 W LUI $end
$var parameter 7 X MEM_RD_OP $end
$var parameter 7 Y MEM_WR_OP $end
$var parameter 32 Z WIDTH $end
$var reg 32 [ alu_result [31:0] $end
$var reg 1 @ branch_taken $end
$var reg 32 \ jump_target [31:0] $end
$var reg 32 ] pc_plus_4 [31:0] $end
$upscope $end
$scope module control_unit $end
$var wire 1 @ comparison $end
$var wire 7 ^ opcode [6:0] $end
$var wire 32 _ instruction [31:0] $end
$var wire 3 ` funct3 [2:0] $end
$var parameter 7 a TipoI_Load $end
$var parameter 7 b TipoI_aritmetico $end
$var parameter 7 c TipoI_jalr $end
$var parameter 7 d TipoR $end
$var parameter 7 e TipoS $end
$var parameter 7 f TipoSB $end
$var parameter 7 g TipoUJ_jal $end
$var parameter 7 h TipoU_Lui $end
$var parameter 32 i WIDTH $end
$var reg 1 > four_byte $end
$var reg 1 : mux_imm_signal $end
$var reg 1 9 mux_jalr $end
$var reg 1 8 mux_pc_signal $end
$var reg 1 7 mux_writedata_register $end
$var reg 1 5 one_byte $end
$var reg 1 1 read_mem $end
$var reg 1 , two_bytes $end
$var reg 1 * write_mem $end
$var reg 1 ) write_register $end
$upscope $end
$scope module data_memory_unit $end
$var wire 20 j addr [19:0] $end
$var wire 1 $ clk $end
$var wire 1 > four_bytes $end
$var wire 1 5 one_byte $end
$var wire 1 1 rd $end
$var wire 1 % rst $end
$var wire 1 ' two_bytes $end
$var wire 1 * wr $end
$var wire 32 k data_in [31:0] $end
$var parameter 32 l DEPTH $end
$var parameter 32 m WIDTH $end
$var reg 32 n data_out [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 o i [31:0] $end
$upscope $end
$upscope $end
$scope module imm_generator $end
$var wire 7 p opcode [6:0] $end
$var wire 32 q instr [31:0] $end
$var wire 32 r imm_u [31:0] $end
$var wire 32 s imm_shamt [31:0] $end
$var wire 32 t imm_s [31:0] $end
$var wire 32 u imm_j [31:0] $end
$var wire 32 v imm_i [31:0] $end
$var wire 32 w imm_b [31:0] $end
$var wire 3 x func3 [2:0] $end
$var parameter 7 y ALI_OP $end
$var parameter 7 z BR_OP $end
$var parameter 7 { JAL $end
$var parameter 7 | JALR $end
$var parameter 7 } LUI $end
$var parameter 7 ~ MEM_RD_OP $end
$var parameter 7 !" MEM_WR_OP $end
$var parameter 32 "" WIDTH $end
$var reg 32 #" data_out [31:0] $end
$upscope $end
$scope module inst_memory $end
$var wire 32 $" addr [31:0] $end
$var wire 1 $ clk $end
$var wire 32 %" data_in [31:0] $end
$var wire 32 &" data_out [31:0] $end
$var wire 1 '" rd $end
$var wire 1 % rst $end
$var wire 1 (" wr $end
$var parameter 32 )" DEPTH $end
$var parameter 32 *" WIDTH $end
$upscope $end
$scope module mux_jalr $end
$var wire 32 +" A [31:0] $end
$var wire 32 ," B [31:0] $end
$var wire 1 9 sel $end
$var reg 32 -" out [31:0] $end
$upscope $end
$scope module mux_pc $end
$var wire 32 ." A [31:0] $end
$var wire 32 /" B [31:0] $end
$var wire 1 8 sel $end
$var reg 32 0" out [31:0] $end
$upscope $end
$scope module mux_postalu $end
$var wire 32 1" A [31:0] $end
$var wire 32 2" B [31:0] $end
$var wire 1 7 sel $end
$var reg 32 3" out [31:0] $end
$upscope $end
$scope module mux_prealu $end
$var wire 32 4" B [31:0] $end
$var wire 1 : sel $end
$var wire 32 5" A [31:0] $end
$var reg 32 6" out [31:0] $end
$upscope $end
$scope module pc_register $end
$var wire 1 $ clk $end
$var wire 32 7" data_in [31:0] $end
$var wire 1 % rst $end
$var wire 1 8" write $end
$var parameter 32 9" WIDTH $end
$var reg 32 :" data_out [31:0] $end
$upscope $end
$scope module reg_file $end
$var wire 1 $ clk $end
$var wire 1 ;" read $end
$var wire 5 <" read_register_1 [4:0] $end
$var wire 5 =" read_register_2 [4:0] $end
$var wire 32 >" reg_zero [31:0] $end
$var wire 1 % rst $end
$var wire 1 ) write $end
$var wire 32 ?" write_data [31:0] $end
$var wire 5 @" write_register [4:0] $end
$var parameter 32 A" DEPTH $end
$var parameter 32 B" WIDTH $end
$var reg 32 C" read_data_1 [31:0] $end
$var reg 32 D" read_data_2 [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 E" i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 B"
b101 A"
b100000 9"
b100000 *"
b100000 )"
b100000 ""
b100011 !"
b11 ~
b110111 }
b1100111 |
b1101111 {
b1100011 z
b10011 y
b100000 m
b10100 l
b100000 i
b110111 h
b1101111 g
b1100011 f
b100011 e
b110011 d
b1100111 c
b10011 b
b11 a
b100000 Z
b100011 Y
b11 X
b110111 W
b1100111 V
b1101111 U
b1100011 T
b110011 S
b10011 R
b100000 K
b100000 G
b100000 C
b10100 B
b100000 #
b10100 "
$end
#0
$dumpvars
b0 E"
bx D"
bx C"
bx @"
bx ?"
b0 >"
bx ="
bx <"
1;"
bx :"
18"
b0 7"
b0 6"
bx 5"
b0 4"
bx 3"
bx 2"
b0 1"
b0 0"
b0 /"
bx ."
b0 -"
b0 ,"
bx +"
0("
1'"
bx &"
b0 %"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx $"
b0 #"
bx x
bx0 w
bx v
bx0 u
bx t
b0xxxxx s
bx000000000000 r
bx q
bx p
b100000000000000000000 o
bx n
bx k
b0 j
bx `
bx _
bx ^
bx ]
b0 \
b0 [
bx Q
bx P
b0 O
bx N
bx M
bx L
bx J
b0 I
bx H
bx F
bx E
b100 D
b0 A
0@
bx ?
x>
b0 =
b0 <
bx ;
x:
x9
x8
x7
b0 6
x5
bx 4
bx 3
bx 2
x1
bx 0
bx /
b0 .
b0 -
x,
bx +
x*
x)
1(
z'
bx &
1%
0$
bx !
$end
#35
bx .
bx O
bx 6"
b100 6
b100 0"
b100 7"
bx j
0>
0,
05
1)
01
0*
09
07
0:
08
x(
bx A
bx [
bx 1"
b110 s
b11000101000000000000000 r
b101000000000000110 u
b100000000010 w
b11 t
b110 v
b0 x
b110011 p
b0 `
b110011 ^
b110011 N
b0 M
b0 L
b110 ="
b101 <"
b11 @"
b11000101000000110110011 ;
b11000101000000110110011 _
b11000101000000110110011 q
b11000101000000110110011 &"
b0 $"
b100 ]
b0 2
b0 H
b0 +"
b100 3
b100 E
b100 ."
b0 !
b0 &
b0 4
b0 F
b0 J
b0 Q
b0 :"
0%
1$
#70
0$
#105
b1010 s
b101000111000000000000000 r
b111000000000001010 u
b100 w
b100 t
b1010 v
b1010 ="
b111 <"
b100 @"
b100 <
b100 -"
b100 /"
b1000 6
b1000 0"
b1000 7"
b101000111000001000110011 ;
b101000111000001000110011 _
b101000111000001000110011 q
b101000111000001000110011 &"
b1 $"
b1000 ]
x(
bx A
bx [
bx 1"
b100 2
b100 H
b100 +"
b1000 3
b1000 E
b1000 ."
b100 !
b100 &
b100 4
b100 F
b100 J
b100 Q
b100 :"
1$
#140
0$
#175
b1 .
b1 O
b1 6"
b1 =
b1 I
b1 #"
b1 4"
15
11
17
1:
b1 s
b100000000000000000000 r
b100000000000 u
b100000000000 w
b1 t
b1 v
b11 p
b11 ^
b11 N
b1 ="
b0 <"
b1 @"
b1001 <
b1001 -"
b1001 /"
b1100 6
b1100 0"
b1100 7"
b100000000000010000011 ;
b100000000000010000011 _
b100000000000010000011 q
b100000000000010000011 &"
b10 $"
b1100 ]
x(
bx A
bx [
bx 1"
b1001 2
b1001 H
b1001 +"
b1100 3
b1100 E
b1100 ."
b1000 !
b1000 &
b1000 4
b1000 F
b1000 J
b1000 Q
b1000 :"
1$
#210
b0xxxxxxxx +
b0xxxxxxxx 3"
b0xxxxxxxx ?"
b0xxxxxxxx ?
b0xxxxxxxx n
b0xxxxxxxx 2"
0$
#245
b10 .
b10 O
b10 6"
b10 +
b10 3"
b10 ?"
b10 =
b10 I
b10 #"
b10 4"
0)
01
1*
07
b10 s
b1000001000000000000000 r
b1000000000000010 u
b10 w
b10 t
b10 v
b100011 p
b100011 ^
b100011 N
b10 ="
b1 <"
b10 @"
b10 j
b1110 <
b1110 -"
b1110 /"
b10000 6
b10000 0"
b10000 7"
b1000001000000100100011 ;
b1000001000000100100011 _
b1000001000000100100011 q
b1000001000000100100011 &"
b11 $"
b10000 ]
0(
b10 A
b10 [
b10 1"
b0 0
b0 P
b0 C"
b1110 2
b1110 H
b1110 +"
b10000 3
b10000 E
b10000 ."
b1100 !
b1100 &
b1100 4
b1100 F
b1100 J
b1100 Q
b1100 :"
1$
#280
0$
#315
bx .
bx O
bx 6"
b11111111111111111111111111111000 =
b11111111111111111111111111111000 I
b11111111111111111111111111111000 #"
b11111111111111111111111111111000 4"
05
1)
0*
0:
18
b11001 s
b11111111100111111111000000000000 r
b11111111111111111111111111111000 u
b11111111111111111111111111100000 w
b11111111111111111111111111100001 t
b11111111111111111111111111111001 v
b111 x
b1101111 p
b111 `
b1101111 ^
b1101111 N
b1111111 M
b111 L
b11001 ="
b11111 <"
b1 @"
b10100 +
b10100 3"
b10100 ?"
b10100 j
b1000 <
b1000 -"
b1000 /"
b1000 6
b1000 0"
b1000 7"
b11111111100111111111000011101111 ;
b11111111100111111111000011101111 _
b11111111100111111111000011101111 q
b11111111100111111111000011101111 &"
b100 $"
b10100 ]
0(
b10100 A
b10100 [
b10100 1"
b1000 2
b1000 H
b1000 +"
b10100 3
b10100 E
b10100 ."
b10000 !
b10000 &
b10000 4
b10000 F
b10000 J
b10000 Q
b10000 :"
b0xxxxxxxx 0
b0xxxxxxxx P
b0xxxxxxxx C"
1$
#350
0$
#385
b1 .
b1 O
b1 6"
b1 =
b1 I
b1 #"
b1 4"
15
11
17
1:
08
b1100 6
b1100 0"
b1100 7"
b1 s
b100000000000000000000 r
b100000000000 u
b100000000000 w
b1 t
b1 v
b0 x
b11 p
b0 `
b11 ^
b11 N
b0 M
b0 L
b1 ="
b0 <"
b0xxxxxxxx +
b0xxxxxxxx 3"
b0xxxxxxxx ?"
bx j
b1001 <
b1001 -"
b1001 /"
b100000000000010000011 ;
b100000000000010000011 _
b100000000000010000011 q
b100000000000010000011 &"
b10 $"
b1100 ]
x(
bx A
bx [
bx 1"
bx 0
bx P
bx C"
b1001 2
b1001 H
b1001 +"
b1100 3
b1100 E
b1100 ."
b1000 !
b1000 &
b1000 4
b1000 F
b1000 J
b1000 Q
b1000 :"
1$
#420
0$
#455
b10 .
b10 O
b10 6"
b10 +
b10 3"
b10 ?"
b10 =
b10 I
b10 #"
b10 4"
0)
01
1*
07
b10 s
b1000001000000000000000 r
b1000000000000010 u
b10 w
b10 t
b10 v
b100011 p
b100011 ^
b100011 N
b10 ="
b1 <"
b10 @"
b10 j
b1110 <
b1110 -"
b1110 /"
b10000 6
b10000 0"
b10000 7"
b1000001000000100100011 ;
b1000001000000100100011 _
b1000001000000100100011 q
b1000001000000100100011 &"
b11 $"
b10000 ]
0(
b10 A
b10 [
b10 1"
b1110 2
b1110 H
b1110 +"
b10000 3
b10000 E
b10000 ."
b1100 !
b1100 &
b1100 4
b1100 F
b1100 J
b1100 Q
b1100 :"
b10100 /
b10100 k
b10100 5"
b10100 D"
b0 0
b0 P
b0 C"
1$
#490
0$
#525
bx .
bx O
bx 6"
b11111111111111111111111111111000 =
b11111111111111111111111111111000 I
b11111111111111111111111111111000 #"
b11111111111111111111111111111000 4"
05
1)
0*
0:
18
b11001 s
b11111111100111111111000000000000 r
b11111111111111111111111111111000 u
b11111111111111111111111111100000 w
b11111111111111111111111111100001 t
b11111111111111111111111111111001 v
b111 x
b1101111 p
b111 `
b1101111 ^
b1101111 N
b1111111 M
b111 L
b11001 ="
b11111 <"
b1 @"
b10100 +
b10100 3"
b10100 ?"
b10100 j
b1000 <
b1000 -"
b1000 /"
b1000 6
b1000 0"
b1000 7"
b11111111100111111111000011101111 ;
b11111111100111111111000011101111 _
b11111111100111111111000011101111 q
b11111111100111111111000011101111 &"
b100 $"
b10100 ]
0(
b10100 A
b10100 [
b10100 1"
bx /
bx k
bx 5"
bx D"
b0xxxxxxxx 0
b0xxxxxxxx P
b0xxxxxxxx C"
b1000 2
b1000 H
b1000 +"
b10100 3
b10100 E
b10100 ."
b10000 !
b10000 &
b10000 4
b10000 F
b10000 J
b10000 Q
b10000 :"
1$
#560
0$
#595
b1 .
b1 O
b1 6"
b1 =
b1 I
b1 #"
b1 4"
15
11
17
1:
08
b1100 6
b1100 0"
b1100 7"
b1 s
b100000000000000000000 r
b100000000000 u
b100000000000 w
b1 t
b1 v
b0 x
b11 p
b0 `
b11 ^
b11 N
b0 M
b0 L
b1 ="
b0 <"
b0xxxxxxxx +
b0xxxxxxxx 3"
b0xxxxxxxx ?"
bx j
b1001 <
b1001 -"
b1001 /"
b100000000000010000011 ;
b100000000000010000011 _
b100000000000010000011 q
b100000000000010000011 &"
b10 $"
b1100 ]
x(
bx A
bx [
bx 1"
b1001 2
b1001 H
b1001 +"
b1100 3
b1100 E
b1100 ."
b1000 !
b1000 &
b1000 4
b1000 F
b1000 J
b1000 Q
b1000 :"
bx 0
bx P
bx C"
1$
#630
0$
#665
b10 .
b10 O
b10 6"
b10 +
b10 3"
b10 ?"
b10 =
b10 I
b10 #"
b10 4"
0)
01
1*
07
b10 s
b1000001000000000000000 r
b1000000000000010 u
b10 w
b10 t
b10 v
b100011 p
b100011 ^
b100011 N
b10 ="
b1 <"
b10 @"
b10 j
b1110 <
b1110 -"
b1110 /"
b10000 6
b10000 0"
b10000 7"
b1000001000000100100011 ;
b1000001000000100100011 _
b1000001000000100100011 q
b1000001000000100100011 &"
b11 $"
b10000 ]
0(
b10 A
b10 [
b10 1"
b10100 /
b10100 k
b10100 5"
b10100 D"
b0 0
b0 P
b0 C"
b1110 2
b1110 H
b1110 +"
b10000 3
b10000 E
b10000 ."
b1100 !
b1100 &
b1100 4
b1100 F
b1100 J
b1100 Q
b1100 :"
1$
#700
0$
#735
bx .
bx O
bx 6"
b11111111111111111111111111111000 =
b11111111111111111111111111111000 I
b11111111111111111111111111111000 #"
b11111111111111111111111111111000 4"
05
1)
0*
0:
18
b11001 s
b11111111100111111111000000000000 r
b11111111111111111111111111111000 u
b11111111111111111111111111100000 w
b11111111111111111111111111100001 t
b11111111111111111111111111111001 v
b111 x
b1101111 p
b111 `
b1101111 ^
b1101111 N
b1111111 M
b111 L
b11001 ="
b11111 <"
b1 @"
b10100 +
b10100 3"
b10100 ?"
b10100 j
b1000 <
b1000 -"
b1000 /"
b1000 6
b1000 0"
b1000 7"
b11111111100111111111000011101111 ;
b11111111100111111111000011101111 _
b11111111100111111111000011101111 q
b11111111100111111111000011101111 &"
b100 $"
b10100 ]
0(
b10100 A
b10100 [
b10100 1"
b1000 2
b1000 H
b1000 +"
b10100 3
b10100 E
b10100 ."
b10000 !
b10000 &
b10000 4
b10000 F
b10000 J
b10000 Q
b10000 :"
bx /
bx k
bx 5"
bx D"
b0xxxxxxxx 0
b0xxxxxxxx P
b0xxxxxxxx C"
1$
#770
0$
#805
b1 .
b1 O
b1 6"
b1 =
b1 I
b1 #"
b1 4"
15
11
17
1:
08
b1100 6
b1100 0"
b1100 7"
b1 s
b100000000000000000000 r
b100000000000 u
b100000000000 w
b1 t
b1 v
b0 x
b11 p
b0 `
b11 ^
b11 N
b0 M
b0 L
b1 ="
b0 <"
b0xxxxxxxx +
b0xxxxxxxx 3"
b0xxxxxxxx ?"
bx j
b1001 <
b1001 -"
b1001 /"
b100000000000010000011 ;
b100000000000010000011 _
b100000000000010000011 q
b100000000000010000011 &"
b10 $"
b1100 ]
x(
bx A
bx [
bx 1"
bx 0
bx P
bx C"
b1001 2
b1001 H
b1001 +"
b1100 3
b1100 E
b1100 ."
b1000 !
b1000 &
b1000 4
b1000 F
b1000 J
b1000 Q
b1000 :"
1$
#840
0$
#875
b10 .
b10 O
b10 6"
b10 +
b10 3"
b10 ?"
b10 =
b10 I
b10 #"
b10 4"
0)
01
1*
07
b10 s
b1000001000000000000000 r
b1000000000000010 u
b10 w
b10 t
b10 v
b100011 p
b100011 ^
b100011 N
b10 ="
b1 <"
b10 @"
b10 j
b1110 <
b1110 -"
b1110 /"
b10000 6
b10000 0"
b10000 7"
b1000001000000100100011 ;
b1000001000000100100011 _
b1000001000000100100011 q
b1000001000000100100011 &"
b11 $"
b10000 ]
0(
b10 A
b10 [
b10 1"
b1110 2
b1110 H
b1110 +"
b10000 3
b10000 E
b10000 ."
b1100 !
b1100 &
b1100 4
b1100 F
b1100 J
b1100 Q
b1100 :"
b10100 /
b10100 k
b10100 5"
b10100 D"
b0 0
b0 P
b0 C"
1$
#910
0$
#945
bx .
bx O
bx 6"
b11111111111111111111111111111000 =
b11111111111111111111111111111000 I
b11111111111111111111111111111000 #"
b11111111111111111111111111111000 4"
05
1)
0*
0:
18
b11001 s
b11111111100111111111000000000000 r
b11111111111111111111111111111000 u
b11111111111111111111111111100000 w
b11111111111111111111111111100001 t
b11111111111111111111111111111001 v
b111 x
b1101111 p
b111 `
b1101111 ^
b1101111 N
b1111111 M
b111 L
b11001 ="
b11111 <"
b1 @"
b10100 +
b10100 3"
b10100 ?"
b10100 j
b1000 <
b1000 -"
b1000 /"
b1000 6
b1000 0"
b1000 7"
b11111111100111111111000011101111 ;
b11111111100111111111000011101111 _
b11111111100111111111000011101111 q
b11111111100111111111000011101111 &"
b100 $"
b10100 ]
0(
b10100 A
b10100 [
b10100 1"
bx /
bx k
bx 5"
bx D"
b0xxxxxxxx 0
b0xxxxxxxx P
b0xxxxxxxx C"
b1000 2
b1000 H
b1000 +"
b10100 3
b10100 E
b10100 ."
b10000 !
b10000 &
b10000 4
b10000 F
b10000 J
b10000 Q
b10000 :"
1$
#980
0$
#1015
b1 .
b1 O
b1 6"
b1 =
b1 I
b1 #"
b1 4"
15
11
17
1:
08
b1100 6
b1100 0"
b1100 7"
b1 s
b100000000000000000000 r
b100000000000 u
b100000000000 w
b1 t
b1 v
b0 x
b11 p
b0 `
b11 ^
b11 N
b0 M
b0 L
b1 ="
b0 <"
b0xxxxxxxx +
b0xxxxxxxx 3"
b0xxxxxxxx ?"
bx j
b1001 <
b1001 -"
b1001 /"
b100000000000010000011 ;
b100000000000010000011 _
b100000000000010000011 q
b100000000000010000011 &"
b10 $"
b1100 ]
x(
bx A
bx [
bx 1"
b1001 2
b1001 H
b1001 +"
b1100 3
b1100 E
b1100 ."
b1000 !
b1000 &
b1000 4
b1000 F
b1000 J
b1000 Q
b1000 :"
bx 0
bx P
bx C"
1$
#1035
